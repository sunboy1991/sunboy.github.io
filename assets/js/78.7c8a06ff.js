(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{440:function(t,a,s){"use strict";s.r(a);var e=s(27),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"typescript-体系调研报告"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typescript-体系调研报告"}},[t._v("#")]),t._v(" TypeScript 体系调研报告")]),t._v(" "),s("blockquote",[s("p",[t._v("转自 蚂蚁金服 aoto -"),s("a",{attrs:{href:"https://github.com/ProtoTeam/blog/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("蚂蚁数据体验技术团队博客"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"导引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#导引"}},[t._v("#")]),t._v(" 导引")]),t._v(" "),s("ul",[s("li",[t._v("TS 是什么")]),t._v(" "),s("li",[t._v("为什么要用 TS")]),t._v(" "),s("li",[t._v("TS 能干点什么")]),t._v(" "),s("li",[t._v("使用 TS 的成本")]),t._v(" "),s("li",[t._v("社区发展")]),t._v(" "),s("li",[t._v("周边生态")]),t._v(" "),s("li",[t._v("深入解读 TS")]),t._v(" "),s("li",[t._v("接受 TS")]),t._v(" "),s("li",[t._v("权衡")])]),t._v(" "),s("h2",{attrs:{id:"ts-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-是什么"}},[t._v("#")]),t._v(" TS 是什么")]),t._v(" "),s("p",[s("img",{attrs:{src:"/8f164338a7ef32ecf35c8acb246f0adc.jpg",alt:"TypeScript"}})]),t._v(" "),s("p",[t._v("TypeScript = Type + Script（标准 JS）。我们从 TS 的官方网站上就能看到定义："),s("code",[t._v("TypeScript is a typed superset of JavaScript that compiles to plain JavaScript")]),t._v("。TypeScript 是一个编译到纯 JS 的有类型定义的 JS 超集。")]),t._v(" "),s("h2",{attrs:{id:"为什么要用-ts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用-ts"}},[t._v("#")]),t._v(" 为什么要用 TS")]),t._v(" "),s("p",[s("strong",[t._v("目标：生命周期较长（常常持续几年）的复杂 SPA 应用，保障开发效率的同时提升代码的可维护性和线上运行时质量。")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("从开发效率上看")]),t._v("，虽然需要多写一些类型定义代码，但 TS 在 VSCode、WebStorm 等 IDE 下可以做到智能提示，智能感知 bug，同时我们项目常用的一些第三方类库框架都有 TS 类型声明，我们也可以给那些没有 TS 类型声明的稳定模块写声明文件，如我们的前端 KOP 框架(目前还是蚂蚁内部框架，类比 dva)，这在团队协作项目中可以提升整体的开发效率。")]),t._v(" "),s("li",[s("strong",[t._v("从可维护性上看")]),t._v("，长期迭代维护的项目开发和维护的成员会有很多，团队成员水平会有差异，而软件具有"),s("strong",[t._v("熵")]),t._v("的特质，长期迭代维护的项目总会遇到可维护性逐渐降低的问题，有了强类型约束和静态检查，以及智能 IDE 的帮助下，可以降低软件腐化的速度，提升可维护性，且在"),s("strong",[t._v("重构")]),t._v("时，强类型和静态类型检查会帮上大忙，甚至有了类型定义，会不经意间增加重构的频率（更安全、放心）。")]),t._v(" "),s("li",[s("strong",[t._v("从线上运行时质量上看")]),t._v("，我们现在的 SPA 项目的很多 bug 都是由于一些调用方和被调用方（如组件模块间的协作、接口或函数的调用）的数据格式不匹配引起的，由于 TS 有编译期的静态检查，让我们的 bug 尽可能消灭在编译器，加上 IDE 有智能纠错，编码时就能提前感知 bug 的存在，我们的线上运行时质量会更为稳定可控。")])]),t._v(" "),s("blockquote",[s("p",[t._v("一个复杂软件的常规研发流程，大致分为定义问题、需求分析、规划构建、软件架构、详细设计、编码调试、单元测试、集成测试、集成、系统测试、保障维护。构建活动（主要是编码调试）在中大型项目中的工作量占比大于 50%。同时，一个中大型项目，bug 由构建阶段引起的比例占到 50%~75%，对于一个成功的项目来说，构建活动是必须要做的，而且是工程师更为可控的。【代码大全】")])]),t._v(" "),s("p",[t._v("TS 适合大规模 JavaScript 应用，正如他的官方宣传语"),s("code",[t._v("JavaScript that scales")]),t._v("。从以下几点可以看到 TS 在团队协作、可维护性、易读性、稳定性（编译期提前暴露 bug）等方面上有着明显的好处：")]),t._v(" "),s("ul",[s("li",[t._v("加上了类型系统，对于阅读代码的人和编译器都是友好的。对阅读者来说，类型定义加上 IDE 的智能提示，增强了代码的易读型；对于编译器来说，类型定义可以让编译器揪出隐藏的 bug。")]),t._v(" "),s("li",[t._v("类型系统+静态分析检查+智能感知/提示，使大规模的应用代码质量更高，运行时 bug 更少，更方便维护。")]),t._v(" "),s("li",[t._v("有类似 VSCode 这样配套的 IDE 支持，方便的查看类型推断和引用关系，可以更方便和安全的进行重构，再也不用全局搜索，一个个修改了。")]),t._v(" "),s("li",[t._v("给应用配置、应用状态、前后端接口及各种模块定义类型，整个应用都是一个个的类型定义，使协作更为方便、高效和安全。")])]),t._v(" "),s("h2",{attrs:{id:"ts-能干点什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-能干点什么"}},[t._v("#")]),t._v(" TS 能干点什么")]),t._v(" "),s("h3",{attrs:{id:"静态检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态检查"}},[t._v("#")]),t._v(" 静态检查")]),t._v(" "),s("blockquote",[s("p",[t._v("这类问题是 ESLint 等工具检测不出来的。")])]),t._v(" "),s("h4",{attrs:{id:"低级错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#低级错误"}},[t._v("#")]),t._v(" 低级错误")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" peoples "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tim'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'alex'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sortedPeoples "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" peoples"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("localCompare")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("执行 TS 编译命令"),s("code",[t._v("tsc")]),t._v("，检测到错误：")]),t._v(" "),s("div",{staticClass:"language-plain extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("error TS2339: Property 'localCompare' does not exist on type 'string'.\n")])])]),s("p",[t._v("如果是在支持 TS 的 IDE 中（VS Code、WebStorm 等），则不需等到编译，在 IDE 中就可以非常明显在 localCompare 位置提示出错误信息。")]),t._v(" "),s("p",[t._v("localCompare 这种输入手误（或者手滑不小心删除或添加了字符）时有发生，如果没有编译器静态检查，那有可能就是一个字符引发的血案：埋下了一个"),s("code",[t._v("隐藏的")]),t._v("运行时 bug。如果在 SPA 应用中，这个问题需要较长的操作路径才能被发现，一旦用户触发这个地雷，那它就会爆炸：应用直接 crash（在没有页面刷新的 SPA 中问题尤为凸显）。")]),t._v(" "),s("h4",{attrs:{id:"非空判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非空判断"}},[t._v("#")]),t._v(" 非空判断")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  success"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("执行"),s("code",[t._v("tsc")]),t._v("编译：")]),t._v(" "),s("div",{staticClass:"language-plain extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("error TS2532: Object is possibly 'null'.\n")])])]),s("p",[s("code",[t._v("data.list.length")]),t._v("这行直接引用了 data.list 的属性，但 data.list 的数据格式有不是数组的可能性，这种场景在前端处理后端接口返回时经常出现，接口返回的数据层级可能非常深，如果在某一级缺少了非空判断逻辑，那就意味着埋下了一个不知道什么时候就会引爆的炸弹。")]),t._v(" "),s("h4",{attrs:{id:"类型推断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型推断"}},[t._v("#")]),t._v(" 类型推断")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("miao")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wang")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wang")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("执行"),s("code",[t._v("tsc")]),t._v("编译：")]),t._v(" "),s("div",{staticClass:"language-plain extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("error TS2339: Property 'toUpperCase' does not exist on type 'any[]'.\nerror TS2339: Property 'wang' does not exist on type 'Cat'.\n")])])]),s("p",[t._v("TS 有类型推断，给不同类型的执行对象调用错误的方法都将被检查出来。")]),t._v(" "),s("h3",{attrs:{id:"面向对象编程增强"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象编程增强"}},[t._v("#")]),t._v(" 面向对象编程增强")]),t._v(" "),s("h4",{attrs:{id:"访问权限控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问权限控制"}},[t._v("#")]),t._v(" 访问权限控制")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" someAttr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" department"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" department"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" department"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" howard "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Howard"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sales"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("howard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("执行"),s("code",[t._v("tsc")]),t._v("编译：")]),t._v(" "),s("div",{staticClass:"language-plain extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("error TS2445: Property 'name' is protected and only accessible within class 'Person' and its subclasses.\n")])])]),s("p",[t._v("Person 中 name 属性是 protected 类型，只能在自己类中或者子类中使用。访问权限控制在面向对象编程中很有用，他能帮忙我们做到信息隐藏，JS 面向对象编程的一个大问题就是没有提供原生支持信息隐藏的方案（很多时候都是通过约定编码方式来做）。信息隐藏有助于更好的管理系统的复杂度，这在软件工程中显得尤为重要。")]),t._v(" "),s("h4",{attrs:{id:"接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[t._v("#")]),t._v(" 接口")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Machine")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Base")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Robot")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Base")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Machine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Human "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'run'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'move'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Robot 类可以继承 Base 类，并实现 Machine 和 Human 接口，这种可以组合继承类和实现接口的方式使面向对象编程更为灵活、可扩展性更好。")]),t._v(" "),s("h4",{attrs:{id:"泛型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#泛型"}},[t._v("#")]),t._v(" 泛型")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericNumber")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    zeroValue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myGenericNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericNumber")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyGenericNumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zeroValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyGenericNumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("定义了一个模板类型 T，实例化 GenericNumber 类时可以传入内置类型或者自定义类型。泛型（模板）在传统面向对象编程语言中是很常见的概念了，在代码逻辑是通用模式化的，参数可以是动态类型的场景下比较有用。")]),t._v(" "),s("h3",{attrs:{id:"类型系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型系统"}},[t._v("#")]),t._v(" 类型系统")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SystemConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  attr1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  attr2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModuleType")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    attr1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    attr2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  visible"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" config"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SystemConfig "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  attr1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  attr2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'str'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("func1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mod"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ModuleType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    attr1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  visible"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("我们定义了一个系统配置类型"),s("code",[t._v("SystemConfig")]),t._v("和一个模块类型"),s("code",[t._v("ModuleType")]),t._v("，我们在使用这些类型时就不能随便修改"),s("code",[t._v("config")]),t._v("和"),s("code",[t._v("mod")]),t._v("的数据了。"),s("strong",[t._v("每个被调用方负责自己的对外类型展现，调用者只需关心被调用方的类型，不需关心内部细节")]),t._v("，这就是类型约束的好处，这对于多人协作的团队项目非常有帮助。")]),t._v(" "),s("h3",{attrs:{id:"模块系统增强"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块系统增强"}},[t._v("#")]),t._v(" 模块系统增强")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'N.a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("TS 除了支持 ES6 的模块系统之外，还支持命名空间。这在管理复杂模块的内部时比较有用。")]),t._v(" "),s("h2",{attrs:{id:"使用-ts-的成本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-ts-的成本"}},[t._v("#")]),t._v(" 使用 TS 的成本")]),t._v(" "),s("h3",{attrs:{id:"学习成本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习成本"}},[t._v("#")]),t._v(" 学习成本")]),t._v(" "),s("p",[t._v("理论上学习并应用一门新语言是需要很高成本的，但好在 TS 本身是 JS 的超集，这也意味着他本身是可以支持现有 JS 代码的，至少理论上是这样。学习一下类型系统的相关知识和面向对象的基础知识，应该可以 hold 住 TS，成本不会很高。"),s("a",{attrs:{href:"http://www.typescriptlang.org/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v("是最好的学习材料。")]),t._v(" "),s("h3",{attrs:{id:"应用成本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用成本"}},[t._v("#")]),t._v(" 应用成本")]),t._v(" "),s("h4",{attrs:{id:"老项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#老项目"}},[t._v("#")]),t._v(" 老项目")]),t._v(" "),s("p",[t._v("对于老项目，由于 TS 兼容 ES 规范，所以可以比较方便的升级现有的 JS（这里指 ES6 及以上）代码，逐渐的加类型注解，渐进式增强代码健壮性。迁移过程：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("npm 全局安装 typescript 包，并在工程根目录运行"),s("code",[t._v("tsc --init")]),t._v("，自动产生"),s("code",[t._v("tsconfig.json")]),t._v("文件。\n默认的 3 个配置项："),s("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/compiler-options.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("更多配置项说明"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[s("code",[t._v('"target":"es5"')]),t._v(": 编译后代码的 ES 版本，还有 es3，es2105 等选项。")]),t._v(" "),s("li",[s("code",[t._v('"module":"commonjs"')]),t._v(":编译后代码的模块化组织方式，还有 amd，umd，es2015 等选项。")]),t._v(" "),s("li",[s("code",[t._v('"strict":true')]),t._v(":严格校验，包含不能有没意义的 any，null 校验等选项。")])])]),t._v(" "),s("li",[s("p",[t._v("初始化得到的"),s("code",[t._v("tsconfig.json")]),t._v("无需修改，增加"),s("code",[t._v('"allowJs": true')]),t._v("选项。")])]),t._v(" "),s("li",[s("p",[t._v("配置 webpack 配置，增加 ts 的 loader，如 awesome-typescript-loader。(如果是基于 atool-build 来构建的项目，则它内置了 ts 编译，这步省略)")]),t._v(" "),s("div",{staticClass:"language-jsonplainplainplainplainplainplainplainplainplainplainplainplainplainplainplainplainplainplainplainplain extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("loaders: [\n\t// All files with a '.ts' or '.tsx' extension will be handled by 'awesome-typescript-loader'.\n\t{ test: /\\.tsx?$/, loader: \"awesome-typescript-loader\" }\n]\n")])])])]),t._v(" "),s("li",[s("p",[t._v("此时你可以写文件名为 ts 和 tsx（React）后缀的代码了，它可以和现有的 ES6 代码共存，VSCode 会自动校验这部分代码，webpack 打包也没问题了。")])]),t._v(" "),s("li",[s("p",[t._v("逐渐的，开始打算重构以前的 ES6 代码为 TS 代码，只需将文件后缀改成 ts(x)就行，就可以享受 TS 及 IDE 智能感知/纠错带来的好处。")])])]),t._v(" "),s("p",[t._v("更多迁移教程："),s("a",{attrs:{href:"http://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方迁移教程"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://github.com/Microsoft/TypeScript-React-Conversion-Guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方 React 项目迁移教程"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://basarat.gitbooks.io/typescript/content/docs/types/migrating.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("社区教程 1"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://medium.com/@clayallsopp/incrementally-migrating-javascript-to-typescript-565020e49c88",target:"_blank",rel:"noopener noreferrer"}},[t._v("社区教程 2"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"新项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新项目"}},[t._v("#")]),t._v(" 新项目")]),t._v(" "),s("ul",[s("li",[t._v("对于新项目，微软提供了非常棒的一些"),s("a",{attrs:{href:"http://www.typescriptlang.org/samples/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Starter 项目"),s("OutboundLink")],1),t._v("，详细介绍了如何用 TS 和其他框架、库配合使用。如果是 React 项目，可以参考这个 Starter："),s("a",{attrs:{href:"https://github.com/Microsoft/TypeScript-React-Starter",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript-React-Starter"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"成本对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#成本对比"}},[t._v("#")]),t._v(" 成本对比")]),t._v(" "),s("blockquote",[s("p",[t._v("星多表示占优")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("成本点")]),t._v(" "),s("th",[t._v("ES")]),t._v(" "),s("th",[t._v("TS")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("学习和踩坑成本")]),t._v(" "),s("td",[t._v("※※※※※")]),t._v(" "),s("td",[t._v("※※※")]),t._v(" "),s("td",[t._v("虽然是 JS 超集，但还是要学习 TS 本身及面向对象基础知识，开发环境搭建、使用中的问题和坑也需要自己趟，好在 TS 社区比较成熟，网上沉淀的资料很多")])]),t._v(" "),s("tr",[s("td",[t._v("整体代码量")]),t._v(" "),s("td",[t._v("※※※※※")]),t._v(" "),s("td",[t._v("※※※※")]),t._v(" "),s("td",[t._v("TS 代码增加比较完善的类型定义的话整体代码量比原生 ES 多 5%~10%左右")])]),t._v(" "),s("tr",[s("td",[t._v("原生 JS（标准 ES、浏览器端、服务器端）")]),t._v(" "),s("td",[t._v("※※※")]),t._v(" "),s("td",[t._v("※※※※※")]),t._v(" "),s("td",[t._v("IDE 内置了详尽的类型声明，可以智能提示方法和参数说明，提升了效率")])]),t._v(" "),s("tr",[s("td",[t._v("依赖外部库（React、Lodash、Antd）")]),t._v(" "),s("td",[t._v("※※※")]),t._v(" "),s("td",[t._v("※※※※※")]),t._v(" "),s("td",[t._v("有 TS 类型声明库，IDE 智能提示和分析，效率提升")])]),t._v(" "),s("tr",[s("td",[t._v("内部公共库、模块")]),t._v(" "),s("td",[t._v("※※※")]),t._v(" "),s("td",[t._v("※※※※")]),t._v(" "),s("td",[t._v("团队内部自行编写类型定义文件，有一定工作量，但开发效率可以有一些提升，逐步完善类型定义后，效率进一步提升")])]),t._v(" "),s("tr",[s("td",[t._v("团队协作效率")]),t._v(" "),s("td",[t._v("※※")]),t._v(" "),s("td",[t._v("※※※※※")]),t._v(" "),s("td",[t._v("对系统配置、外部接口、内部模块做类型定义后，实例对象属性就不能随意改了，每个被调用方负责自己的对外类型展现（可以理解为形状），调用者只需关心被调用方的类型，不需关心内部细节")])]),t._v(" "),s("tr",[s("td",[t._v("代码可维护性")]),t._v(" "),s("td",[t._v("※※")]),t._v(" "),s("td",[t._v("※※※※")]),t._v(" "),s("td",[t._v("由于团队成员水平差异，和软件的"),s("strong",[t._v("熵")]),t._v("的特质，长期迭代维护的项目总会遇到可维护性的问题，有了强类型约束和静态检查，以及智能 IDE 的帮助下，可以降低软件腐化的速度，提升可维护性，且在"),s("strong",[t._v("重构")]),t._v("时，强类型和静态类型检查会帮上大忙，甚至有了类型定义，会不经意间增加重构的频率")])]),t._v(" "),s("tr",[s("td",[t._v("运行时稳定性")]),t._v(" "),s("td",[t._v("※※")]),t._v(" "),s("td",[t._v("※※※※")]),t._v(" "),s("td",[t._v("由于 TS 有静态类型检查，很多 bug 都会被消灭在上线前")])])])]),t._v(" "),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("从上面的对比中可以看到，使用大家都熟悉的 ES 作为开发语言只在学习和踩坑成本以及整体代码量上占优，如果只是短期项目，那用 ES 无可厚非，但我们的项目生命周期持续好几年，是持续迭代升级的，目前 TS 社区已经比较成熟，学习资料也很多，而且 TS 带来的是内部协作开发效率、可维护性、稳定性的提升，所以从长远来看这个代价是值得付出的。而且各种类型声明定义文件的存在，是可以提升开发效率的；而且静态类型检查可以减少 bug 数量和排查 bug 的难度，变相也提升了效率，而且使整个项目相对变得更为稳定可控。")]),t._v(" "),s("h2",{attrs:{id:"社区发展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#社区发展"}},[t._v("#")]),t._v(" 社区发展")]),t._v(" "),s("p",[t._v("从 Stackoverflow 的"),s("a",{attrs:{href:"https://insights.stackoverflow.com/survey/2017#technology-most-loved-dreaded-and-wanted-languages",target:"_blank",rel:"noopener noreferrer"}},[t._v("2017 年开发者调查报告"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://trends.google.com/trends/explore?date=today%205-y&q=%2Fm%2F0n50hxv",target:"_blank",rel:"noopener noreferrer"}},[t._v("Google 趋势"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"http://www.npmtrends.com/typescript",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm 下载量趋势"),s("OutboundLink")],1),t._v("上可以到看，TypeScript 社区发展很快，特别是最近几年。特别是伴随着 VS Code 的诞生（TS 写的，对 TS 支持非常友好），VS Code + TypeScript 的组合让前端圈产生了一股清流，生产力和规范性得到了快速提升。从 Google 对 TS 的支持（Angular 高于 2 的版本是 TS 写的）看到，国际大厂也是支持的。")]),t._v(" "),s("p",[t._v("从蚂蚁集团内部看，Ant Design、Basement 等产品也是基于 TS 写的（至少是在大量使用），虽然有一些反对的声音，但总体还是看好的，有合适的土壤就会快速发展，如 Ant Design。")]),t._v(" "),s("h2",{attrs:{id:"周边生态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#周边生态"}},[t._v("#")]),t._v(" 周边生态")]),t._v(" "),s("h3",{attrs:{id:"类型声明包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型声明包"}},[t._v("#")]),t._v(" 类型声明包")]),t._v(" "),s("p",[t._v("React、及其他各种著名框架、库都有 TS 类型声明，我们可以在项目中通过"),s("code",[t._v("npm install @types/react")]),t._v("方式安装，可以在"),s("a",{attrs:{href:"http://microsoft.github.io/TypeSearch/",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个网站"),s("OutboundLink")],1),t._v("搜索你想要安装的库声明包。安装后，写和那些框架、库相关的代码将会是一种非常爽的体验，函数的定义和注释将会自动提示出来，开发效率将会得到提升。")]),t._v(" "),s("h3",{attrs:{id:"ide"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ide"}},[t._v("#")]),t._v(" IDE")]),t._v(" "),s("p",[t._v("VS Code、WebStorm 等前端圈流行的 IDE 都对 TS 有着非常友好的支持，VS Code 甚至自身就是 TS 写成的。")]),t._v(" "),s("h2",{attrs:{id:"深入解读-ts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深入解读-ts"}},[t._v("#")]),t._v(" 深入解读 TS")]),t._v(" "),s("h3",{attrs:{id:"ts-语言设计目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-语言设计目标"}},[t._v("#")]),t._v(" TS 语言设计目标")]),t._v(" "),s("h4",{attrs:{id:"目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),s("p",[t._v("编译期可以做静态检查，为大规模代码提供结构化装置，编译出符合习惯、易读的 JS 代码，和 ECMAScript 标准对齐，使用一贯的、可删除的、结构化的类型系统，保护编译后的 JS 代码的运行时行为等等。")]),t._v(" "),s("h4",{attrs:{id:"非目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非目标"}},[t._v("#")]),t._v(" 非目标")]),t._v(" "),s("p",[t._v("模仿现有语言，优化编译后代码的性能，应用“正确”的类型系统，增加运行时类型信息等等。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/Microsoft/TypeScript/wiki/TypeScript-Design-Goals",target:"_blank",rel:"noopener noreferrer"}},[t._v("TS 设计目标原文"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"ts-简史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-简史"}},[t._v("#")]),t._v(" TS 简史")]),t._v(" "),s("p",[t._v("在最近几年，随着 V8 平台、各大现代浏览器的起来，JS 的运行平台再不断完善，但，JS 对于大型应用的开发是非常困难的，JS 语言设计出来的目的不是为了大型应用，他是一门脚本语言，他没有静态类型校验，但更重要的是，他没有提供大型应用必须的 classes、modules/namespaces、interfaces 等结构化的装置，中间也出来过 GWT 等为了其他语言开发者开发大型 JS 应用的项目，这些项目可以让你利用 Java 等面向对象语言开发大型 Web 应用，也可以利用到 Eclipse 等好用的 IDE，但这些项目不是用 JS 写代码，所以如果你想用 JS 里的一些东西，你可能要比较费劲的在其他语言里把它给实现出来，所以我们考虑如何"),s("strong",[t._v("增强")]),t._v("JS 语言，提供如静态类型检查、classes、modules/namespaces、interfaces 等大型应用装置，这就是 TS 语言：**TS 是一种开发大型 JS 应用的语言，更详细一点来说，TS 是有类型的编译到纯 JS 的 JS 超集。**所以一般来说，JS 代码也是 TS 代码。本身 TS 编译器也是 TS 写的，运行 Node.js 环境。【"),s("a",{attrs:{href:"https://channel9.msdn.com/posts/Anders-Hejlsberg-Introducing-TypeScript",target:"_blank",rel:"noopener noreferrer"}},[t._v("Anders Hejlsberg: Introducing TypeScript 2012"),s("OutboundLink")],1),t._v("】")]),t._v(" "),s("p",[t._v("TS 作者在最近微软 Build 大会给出的一个图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/693bf5a67c81cbe007fc83311f29571f.jpg",alt:"JS feature间隔"}})]),t._v(" "),s("p",[t._v("如图，Web 和 Node 平台的 JS 始终与 JS 最新规范有一段距离，Web 平台的距离更远，TS 可以填充这个间隙，让使用者在 Web 和 Node 平台都能用上最新的 Feature，用上优雅的 JS，提高生产力。【"),s("a",{attrs:{href:"https://channel9.msdn.com/Events/Build/2017/B8088?ocid=player",target:"_blank",rel:"noopener noreferrer"}},[t._v("Anders Hejlsberg: What's new in TypeScript? 2017"),s("OutboundLink")],1),t._v("】")]),t._v(" "),s("h3",{attrs:{id:"和-flow-、babel-的对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和-flow-、babel-的对比"}},[t._v("#")]),t._v(" 和 Flow 、Babel 的对比")]),t._v(" "),s("h4",{attrs:{id:"vs-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vs-flow"}},[t._v("#")]),t._v(" vs Flow")]),t._v(" "),s("p",[t._v("从"),s("a",{attrs:{href:"https://github.com/niieani/typescript-vs-flowtype",target:"_blank",rel:"noopener noreferrer"}},[t._v("这篇文章"),s("OutboundLink")],1),t._v("可以看出，基础的类型检查功能发展到现在已经差别不大了，但在周边生态、文档完整性、社区资源方面 TS 胜过 Flow。")]),t._v(" "),s("h4",{attrs:{id:"vs-babel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vs-babel"}},[t._v("#")]),t._v(" vs Babel")]),t._v(" "),s("p",[t._v("Babel 也是很不错的 ES6 to 5 编译工具，有不错的插件机制，社区发展也不错，但在同样一段代码编译出的 JS 代码里可以看到，TS 编译后的代码是更符合习惯、简洁易读一些（都用的是官方网站的 Playground 工具）。我曾经维护过 TS 编译后的 JS 代码（TS 源码丢失），感觉还 OK。")]),t._v(" "),s("p",[t._v("Babel 编译后：\n"),s("img",{attrs:{src:"/755936c632e1ef5290fac2bf3201d70b.jpg",alt:"Babel编译"}})]),t._v(" "),s("p",[t._v("TS 编译后：\n"),s("img",{attrs:{src:"/68a505993139e80d7d33bf2b7244ed16.jpg",alt:"TS编译"}})]),t._v(" "),s("h3",{attrs:{id:"ts-基础知识及核心概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-基础知识及核心概念"}},[t._v("#")]),t._v(" TS 基础知识及核心概念")]),t._v(" "),s("h4",{attrs:{id:"基础类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础类型"}},[t._v("#")]),t._v(" 基础类型")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" isDone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" decimal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" color"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组，有两种写法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 元组(Tuple)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 枚举")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Color "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Red "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Green "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Blue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Green"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不确定的可以先声明为any")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" notSure"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明没有返回值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("warnUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is my warning message"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" u"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型永远没返回")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("never")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型主张，就是知道的比编译器多，主动告诉编译器更多信息，有两种写法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" someValue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is a string"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" strLength"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("someValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" strLength"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someValue "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("更多介绍可以直接看"),s("a",{attrs:{href:"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E7%9C%8B%5B%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%5D(https://www.typescriptlang.org)%EF%BC%8C%E4%B8%8B%E9%9D%A2%E4%BB%8B%E7%BB%8D%E4%B8%8B%E4%BB%96%E4%B8%8D%E5%90%8C%E4%BA%8EES%E7%9A%84%E5%87%A0%E4%B8%AA%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%EF%BC%9A"}},[t._v("官方文档")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"interface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#interface"}},[t._v("#")]),t._v(" interface")]),t._v(" "),s("p",[t._v("TS 中的一个核心原则之一就是类型检查关注的是值的形状，有时就叫做“鸭子辨型”（duck typing）或“结构化子类型”（structural subtyping）。TS 中 interface 就承担了这样的角色，定义形状与约束，在内部使用或者和外部系统协作。一个例子：")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SystemConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \tattr1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \tattr2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("我们给软件定了一个系统参数的配置接口，他定义了系统配置的形状，有两个属性"),s("code",[t._v("attr1")]),t._v("和"),s("code",[t._v("attr2")]),t._v("，两个方法"),s("code",[t._v("func1")]),t._v("和"),s("code",[t._v("func2")]),t._v("，这样如果定义了"),s("code",[t._v("const systemConfig: SystemConfig = {}")]),t._v(",那 systemConfig 就不能随意修改了，他有形状了。")]),t._v(" "),s("p",[t._v("在 Java 中，我们提倡面向接口编程，接口优于抽象类【Effective Java】，在 TS 的类系统中，接口也可以承担这样的角色，我们可以用"),s("code",[t._v("implements")]),t._v("来实现接口，这样可以实现类似更为灵活的继承，如：")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseInterface1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" BaseInterface2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("类 A 继承了 BaseClass，并且继承了 BaseInterface1 和 BaseInterface2 两个接口。")]),t._v(" "),s("h4",{attrs:{id:"module-namespace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#module-namespace"}},[t._v("#")]),t._v(" module/namespace")]),t._v(" "),s("p",[t._v("导出到外部的模块写法和 ES6 一样，内部模块现在推荐用 namespace，如：")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" Module1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SubModule1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SubModule2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Module1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SubModule "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("命名空间在 JS 中用对象字面量也可以实现，早些年的很多 JS 库都是这种模式，但显然有了这种显示的命名空间声明，代码的易读性更好，且不能随意的改变，不像用原生 JS 对象时容易被覆盖。")]),t._v(" "),s("h4",{attrs:{id:"访问权限控制-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问权限控制-2"}},[t._v("#")]),t._v(" 访问权限控制")]),t._v(" "),s("p",[t._v("TS 有着和传统面向对象语言类似的 public、protected、private 等访问权限，这个在大型应用中很实用，这里不展开。")]),t._v(" "),s("h4",{attrs:{id:"其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),s("p",[t._v("除了泛型相对难以掌握，其他 class、decorator、async/await 等都和 ES6、ES7 写法类似。")]),t._v(" "),s("h3",{attrs:{id:"type-和-type-system"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-和-type-system"}},[t._v("#")]),t._v(" Type 和 Type System")]),t._v(" "),s("p",[t._v("TypeScript = Type + Script，那么编程语言中的 Type 是怎么定义的呢？")]),t._v(" "),s("blockquote",[s("p",[t._v("In "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Computer_science",target:"_blank",rel:"noopener noreferrer"}},[t._v("computer science"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Computer_programming",target:"_blank",rel:"noopener noreferrer"}},[t._v("computer programming"),s("OutboundLink")],1),t._v(", a "),s("strong",[t._v("data type")]),t._v(" or simply "),s("strong",[t._v("type")]),t._v(" is a classification of data which tells the compiler or interpreter how the programmer intends to use the data.【"),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Data_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("维基百科"),s("OutboundLink")],1),t._v("】")])]),t._v(" "),s("p",[t._v("在计算机科学中，数据类型或者简单说类型，是数据的类别，用来告诉编译器/解释器程序员想怎么使用数据。基本的数据类型如整数、布尔值、字符等，组合数据类型如数组、对象等，也有抽象数据类型如队列、栈、集合、字典等等。数据类型用在类型系统中，类型系统提供了类型定义、实现和使用的方式，每种编程语言都有各自的类型系统实现（如果有的话）。")]),t._v(" "),s("p",[t._v("我们来看看 Type System（类型系统）的定义：")]),t._v(" "),s("blockquote",[s("p",[t._v("In "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Programming_language",target:"_blank",rel:"noopener noreferrer"}},[t._v("programming languages"),s("OutboundLink")],1),t._v(", a "),s("strong",[t._v("type system")]),t._v(" is a set of rules that assigns a property called "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Type_(computer_science)",target:"_blank",rel:"noopener noreferrer"}},[t._v("type"),s("OutboundLink")],1),t._v(" to the various constructs of a "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Computer_program",target:"_blank",rel:"noopener noreferrer"}},[t._v("computer program"),s("OutboundLink")],1),t._v(", such as "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Variable_(computer_science)",target:"_blank",rel:"noopener noreferrer"}},[t._v("variables"),s("OutboundLink")],1),t._v(", "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Expression_(computer_science)",target:"_blank",rel:"noopener noreferrer"}},[t._v("expressions"),s("OutboundLink")],1),t._v(", "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Function_(computer_science)",target:"_blank",rel:"noopener noreferrer"}},[t._v("functions"),s("OutboundLink")],1),t._v(" or "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Modular_programming",target:"_blank",rel:"noopener noreferrer"}},[t._v("modules"),s("OutboundLink")],1),t._v(".["),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Type_system#cite_note-FOOTNOTEPierce20021-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("1]"),s("OutboundLink")],1),t._v(' These types formalize and enforce the (otherwise implicit) categories the programmer uses for data structures and components (ex: "string", "array of float", "function returning boolean"). The main purpose of a type system is to reduce possibilities for '),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Bug_(computer_programming)",target:"_blank",rel:"noopener noreferrer"}},[t._v("bugs"),s("OutboundLink")],1),t._v(" in computer programs["),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Type_system#cite_note-FOOTNOTECardelli20041-2",target:"_blank",rel:"noopener noreferrer"}},[t._v("2]"),s("OutboundLink")],1),t._v(" by defining interfaces between different parts of a computer program, and then checking that the parts have been connected in a consistent way. 【"),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Type_system",target:"_blank",rel:"noopener noreferrer"}},[t._v("维基百科"),s("OutboundLink")],1),t._v("】")])]),t._v(" "),s("p",[t._v("在编程语言中，类型系统是一个规则集合，给程序中的变量、表达式、函数、模块等程序构建元素分配叫做类型的属性。这些类型明确并强制（也可能是含蓄的）程序员如何使用数据结构。**类型系统的主要目的是通过定义程序不同部分间协作的接口，并检查不同部分以始终如一的方式协作，来减少程序可能产生的 bug。**这种检查可能是静态的（编译期）或动态的（运行时），或者既有静态的也有动态的。")]),t._v(" "),s("h4",{attrs:{id:"类型系统的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型系统的好处"}},[t._v("#")]),t._v(" 类型系统的好处")]),t._v(" "),s("h5",{attrs:{id:"检测错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检测错误"}},[t._v("#")]),t._v(" 检测错误")]),t._v(" "),s("blockquote",[s("p",[t._v("The most obvious benefit of static typechecking is that it allows early detection of some programming errors. Errors that are detected early can be fixed immediately, rather than lurking in the code to be discovered much later,when the programmer is in the middle of something else—or even after the program has been deployed. Moreover, errors can often be pinpointed more accurately during typechecking than at run time, when their effects may not become visible until some time after things begin to go wrong.【"),s("a",{attrs:{href:"https://www.cis.upenn.edu/~bcpierce/tapl/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Types and Programming Languages"),s("OutboundLink")],1),t._v("】")])]),t._v(" "),s("blockquote",[s("p",[t._v("As your app grows, you can catch a lot of bugs with typechecking. 【"),s("a",{attrs:{href:"https://facebook.github.io/react/docs/typechecking-with-proptypes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("React typechecking"),s("OutboundLink")],1),t._v("】")])]),t._v(" "),s("p",[t._v("静态类型检查最明显的好处是可以尽早的检查出程序中的错误。错误被尽早的检查出来可以使它得到快速的修复，而不是潜伏在代码中，在中期甚至部署上线后才被发现。而且，错误在编译期可以被更精确的定位出来，而在运行时，错误产生的影响在程序出现问题前可能是不容易被发现的。")]),t._v(" "),s("p",[t._v("程序会有各种各样的数据结构，如果改了一个数据类型，前端很多时候都是通过全局查找来处理这种重构问题的。而静态类型检查则可以使再次编译后就能探知所有可能的错误，加上 IDE 的智能错误提示，重构起来更放心、更方便。")]),t._v(" "),s("h5",{attrs:{id:"抽象化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抽象化"}},[t._v("#")]),t._v(" 抽象化")]),t._v(" "),s("blockquote",[s("p",[t._v("Another important way in which type systems support the programming process is by enforcing disciplined programming. In particular, in the context of large-scale software composition, type systems form the backbone of the module languages used to package and tie together the components of large systems. Types show up in the interfaces of modules (and related structures such as classes); indeed, an interface itself can be viewed as “the type of a module,” providing a summary of the facilities provided by the module—a kind of partial contract between implementors and users.")]),t._v(" "),s("p",[t._v("Structuring large systems in terms of modules with clear interfaces leads to a more abstract style of design, where interfaces are designed and discussed independently from their eventual implementations. More abstract thinking about interfaces generally leads to better design.【"),s("a",{attrs:{href:"https://www.cis.upenn.edu/~bcpierce/tapl/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Types and Programming Languages"),s("OutboundLink")],1),t._v("】")])]),t._v(" "),s("p",[t._v("类型系统支持编程阶段的另外一个重要方式是强制让编程遵守纪律。在大规模软件系统中，类型系统组成了组件协作系统的脊梁。类型展现在模块（或者相关的结构如类）的接口中。接口可以看做“模块的类型”，展示了模块所能提供的功能，是一种实现者和用户间的合约。")]),t._v(" "),s("p",[t._v("在大量模块协作组成的大规模结构化软件系统中清晰的接口可以使设计更为抽象，接口的设计和讨论独立于它们的实现。一般来说，对接口更为抽象的思考可以使得做出更好的设计。")]),t._v(" "),s("blockquote",[s("p",[t._v("Types enable programmers to think at a higher level than the bit or byte, not bothering with low-level implementation. For example, programmers can begin to think of a string as a set of character values instead of as a mere array of bytes. Higher still, types enable programmers to think about and express "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Interface_(computer_science)",target:"_blank",rel:"noopener noreferrer"}},[t._v("interfaces"),s("OutboundLink")],1),t._v(" between two of "),s("em",[t._v("any")]),t._v("-sized subsystems. This enables more levels of localization so that the definitions required for interoperability of the subsystems remain consistent when those two subsystems communicate.【"),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Type_system",target:"_blank",rel:"noopener noreferrer"}},[t._v("维基百科"),s("OutboundLink")],1),t._v("】")])]),t._v(" "),s("p",[t._v("类型会让程序员在一个更高的维度思考，而不是在底层的计算机实现细节纠缠。例如，我们可以把字符串想成字符集，而不仅仅是比特数组。更高维度，类型系统可以让我们用接口来思考和表达任意子系统/子程序之间的协作，接口定义可以让子系统/子程序之间的通信方式始终如一。")]),t._v(" "),s("h5",{attrs:{id:"文档化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档化"}},[t._v("#")]),t._v(" 文档化")]),t._v(" "),s("blockquote",[s("p",[t._v("Types are also useful when reading programs. The type declarations in procedure headers and module interfaces constitute a form of documentation,giving useful hints about behavior. Moreover, unlike descriptions embedded in comments, this form of documentation cannot become outdated, since it\nis checked during every run of the compiler. This role of types is particularly important in module signatures.【"),s("a",{attrs:{href:"https://www.cis.upenn.edu/~bcpierce/tapl/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Types and Programming Languages"),s("OutboundLink")],1),t._v("】")])]),t._v(" "),s("p",[t._v("类型对于阅读程序也是有用的。在程序头部的类型声明和模块接口形成了文档的形状，提供程序的行为提示。此外，不同于在注释中的描述，这种形式的文档不会过期，因为每次编译都会校验，这在模块签名里特别重要。")]),t._v(" "),s("blockquote",[s("p",[t._v("In more expressive type systems, types can serve as a form of "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Documentation",target:"_blank",rel:"noopener noreferrer"}},[t._v("documentation"),s("OutboundLink")],1),t._v(" clarifying the intent of the programmer. For example, if a programmer declares a function as returning a timestamp type, this documents the function when the timestamp type can be explicitly declared deeper in the code to be an integer type.【"),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Type_system",target:"_blank",rel:"noopener noreferrer"}},[t._v("维基百科"),s("OutboundLink")],1),t._v("】")])]),t._v(" "),s("p",[t._v("在复用表现力的类型系统中，类型可以看做是一种描述程序员意图的表述方式。例如，我们声明一个函数返回一个时间戳，这样就相当于明确说明了这个函数在更深层次的代码调用中会返回整数类型。")]),t._v(" "),s("h5",{attrs:{id:"语言安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语言安全"}},[t._v("#")]),t._v(" 语言安全")]),t._v(" "),s("blockquote",[s("p",[t._v("The term “safe language” is, unfortunately, even more contentious than “type system.” Although people generally feel they know one when they see it, their notions of exactly what constitutes language safety are strongly influenced by the language community to which they belong. Informally, though, safe\nlanguages can be defined as ones that make it impossible to shoot yourself in the foot while programming.【"),s("a",{attrs:{href:"https://www.cis.upenn.edu/~bcpierce/tapl/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Types and Programming Languages"),s("OutboundLink")],1),t._v("】")])]),t._v(" "),s("p",[t._v("安全语言这个说法是有争议的。受到该语言社区的严重影响。不正式的来说，安全语言可以被定义为在编程时不可能从底层把自己杀死。")]),t._v(" "),s("blockquote",[s("p",[t._v("A type system enables the "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Compiler",target:"_blank",rel:"noopener noreferrer"}},[t._v("compiler"),s("OutboundLink")],1),t._v(" to detect meaningless or probably invalid code. For example, we can identify an expression "),s("code",[t._v('3 / "Hello, World"')]),t._v(" as invalid, when the rules do not specify how to divide an "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Integer",target:"_blank",rel:"noopener noreferrer"}},[t._v("integer"),s("OutboundLink")],1),t._v(" by a "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/String_(computer_science)",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),s("OutboundLink")],1),t._v(". Strong typing offers more safety, but cannot guarantee complete "),s("em",[t._v("type safety")]),t._v(".【"),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Type_system",target:"_blank",rel:"noopener noreferrer"}},[t._v("维基百科"),s("OutboundLink")],1),t._v("】")])]),t._v(" "),s("p",[t._v("类型系统会允许编译器检查无意义或者可能不合法的代码。例如，我们知道"),s("code",[t._v("3/'hello world'")]),t._v("不合法，强类型提供了更多的安全性，但也不能完全做到类型安全。")]),t._v(" "),s("h5",{attrs:{id:"效率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#效率"}},[t._v("#")]),t._v(" 效率")]),t._v(" "),s("blockquote",[s("p",[t._v("Static type-checking may provide useful compile-time information. For example, if a type requires that a value must align in memory at a multiple of four bytes, the compiler may be able to use more efficient machine instructions.【"),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Type_system",target:"_blank",rel:"noopener noreferrer"}},[t._v("维基百科"),s("OutboundLink")],1),t._v("】")])]),t._v(" "),s("p",[t._v("静态类型检查会提供有用的编译期信息。例如，如果一个类型需要在内存中占四个字节，编译器可能会使用更有效率的机器指令。")]),t._v(" "),s("h3",{attrs:{id:"静态类型、动态类型和弱类型、强类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态类型、动态类型和弱类型、强类型"}},[t._v("#")]),t._v(" 静态类型、动态类型和弱类型、强类型")]),t._v(" "),s("ul",[s("li",[t._v("静态类型：编译期就知道每一个变量的类型。类型错误编译失败是语法问题。如 Java、C++。")]),t._v(" "),s("li",[t._v("动态类型：编译期不知道类型，运行时才知道。类型错误抛出异常发生在运行时。如 JS、Python。")]),t._v(" "),s("li",[t._v("弱类型：容忍隐式类型转换。如 JS，"),s("code",[t._v("1+'1'='11'")]),t._v("，数字型转成了字符型。")]),t._v(" "),s("li",[t._v("强类型：不容忍隐式类型转换。如 Python，"),s("code",[t._v("1+'1'")]),t._v("会抛出"),s("code",[t._v("TypeError")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"接受-ts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接受-ts"}},[t._v("#")]),t._v(" 接受 TS")]),t._v(" "),s("p",[t._v("TS 刚出来时我是有点抵触的，或者对她的感觉就跟和"),s("code",[t._v("CoffeeScript")]),t._v("、"),s("code",[t._v("Dart")]),t._v("等编译到 JS 语言差不多，感觉就是其他语言往 JS 渗透的产物，近一两年，社区中 TS 的声音越来越强，而我也开始做大型 JavaScript 应用，随之逐渐重新认识 TS，逐渐认识到 TS 的类型系统、TSC 的静态检查、VS Code 等 IDE 的强力支持对于开发出可维护性好、稳定性高的大型 JavaScript 应用的重要性。")]),t._v(" "),s("h2",{attrs:{id:"权衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#权衡"}},[t._v("#")]),t._v(" 权衡")]),t._v(" "),s("p",[t._v("如何更好的利用 JS 的动态性和 TS 的静态特质，我们需要结合项目的实际情况来进行综合判断。一些建议：")]),t._v(" "),s("ul",[s("li",[t._v("如果是中小型项目，且生命周期不是很长，那就直接用 JS 吧，不要被 TS 束缚住了手脚。")]),t._v(" "),s("li",[t._v("如果是大型应用，且生命周期比较长，那建议试试 TS。开源项目如"),s("a",{attrs:{href:"https://github.com/Microsoft/vscode",target:"_blank",rel:"noopener noreferrer"}},[t._v("VS Code"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://github.com/desktop/desktop",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub 桌面端"),s("OutboundLink")],1),t._v("，不开源的如"),s("a",{attrs:{href:"%5Bhttps://slack.engineering/typescript-at-slack-a81307fa288d%5D(https://slack.engineering/typescript-at-slack-a81307fa288d)"}},[t._v("Slack 桌面端")]),t._v("、"),s("a",{attrs:{href:"%5Bhttps://blog.asana.com/2014/11/asana-switching-typescript/%5D(https://blog.asana.com/2014/11/asana-switching-typescript/)"}},[t._v("Asana")]),t._v("、"),s("a",{attrs:{href:"https://medium.com/@clayallsopp/incrementally-migrating-javascript-to-typescript-565020e49c88",target:"_blank",rel:"noopener noreferrer"}},[t._v("Palantir"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("li",[t._v("如果是框架、库之类的公共模块，那更建议用 TS 了。如"),s("a",{attrs:{href:"https://github.com/ant-design/ant-design",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ant Design"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://github.com/angular/angular",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular"),s("OutboundLink")],1),t._v(" 、"),s("a",{attrs:{href:"https://github.com/ionic-team/ionic",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ionic"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("p",[s("strong",[t._v("至于到底用不用 TS，还是要看实际项目规模、项目生命周期、团队规模、团队成员情况等实际情况综合考虑。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);