(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{480:function(t,e,a){"use strict";a.r(e);var r=a(27),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"iphone-x-网页设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iphone-x-网页设计"}},[t._v("#")]),t._v(" iPhone X 网页设计")]),t._v(" "),a("p",[t._v("在最新发布 iPhone X 的全面屏上，Safari 可以精美地显示现有的网站。内容自动嵌入到显示屏的安全区域内，以免被圆角、原深感摄像头系统的空间遮挡住。")]),t._v(" "),a("p",[t._v("凹槽部分填充了页面的 "),a("code",[t._v("background-color")]),t._v(" (比如指定为 "),a("code",[t._v("<body>")]),t._v(" 或 "),a("code",[t._v("<html>")]),t._v(" 元素的背景颜色)，这样就和页面其余部分混合在一起。对于许多网站来说，这已经足够了。如果你的页面在背景色上只有文本和图片，那么默认的凹槽部分看起来也非常不错。")]),t._v(" "),a("p",[t._v("对于其他页面 —— 特别是那些设计全宽水平导航栏的页面，比如像下图的页面，可以选择稍微深入一点，充分利用新显示的功能。 "),a("a",{attrs:{href:"https://developer.apple.com/ios/human-interface-guidelines/overview/iphone-x/",target:"_blank",rel:"noopener noreferrer"}},[t._v("iPhone X 人机界面指南"),a("OutboundLink")],1),t._v(" 详细介绍了一些通用的设计原则，并且 "),a("a",{attrs:{href:"https://developer.apple.com/documentation/uikit/uiview/positioning_content_relative_to_the_safe_area",target:"_blank",rel:"noopener noreferrer"}},[t._v("UIKit 文档"),a("OutboundLink")],1),t._v(" 讨论了原生 app 可以采用的特定机制，以确保它们看起来不错。你的网站可以利用 iOS 11 中引入的一些类似 WebKit API 来充分利用显示器边缘到边缘的特性。")]),t._v(" "),a("p",[t._v("在阅读这篇文章的时候，你可以点击任何图片来访问相应的 Demo 页，并查看源代码：")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/demos/safe-area-insets/1-default.html"}},[a("img",{attrs:{src:"https://webkit.org/wp-content/uploads/default-inset-behavior.png",alt:"Safari's default insetting behavior"}})])],1),t._v(" "),a("p",[t._v("Safari 的默认内嵌行为。")]),t._v(" "),a("h2",{attrs:{id:"使用整个屏幕"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用整个屏幕"}},[t._v("#")]),t._v(" 使用整个屏幕")]),t._v(" "),a("p",[t._v("第一个新特性是对现有 "),a("code",[t._v("viewport")]),t._v(" meta 标签的扩展，称为 "),a("a",{attrs:{href:"https://www.w3.org/TR/css-round-display-1/#viewport-fit-descriptor",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("viewport-fit")]),a("OutboundLink")],1),t._v("，它提供对嵌入行为的控制。在 iOS 11 中可以使用 "),a("code",[t._v("viewport-fit")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("viewport-fit")]),t._v(" 的默认值是 auto，会引起自动嵌入行为的效果。为了使该行为失效，并使页面全屏幕显示，你可以设置 "),a("code",[t._v("viewport-fit:cover")]),t._v(" 为 "),a("code",[t._v("cover")]),t._v("。在这样做之后，我们的 "),a("code",[t._v("viewport")]),t._v(" meta 标记看起来像这样：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<meta name='viewport' content='initial-scale=1, viewport-fit=cover'>\n")])])]),a("p",[t._v("重新加载后，导航栏显示成边缘到边缘的样子，看起来好多了。然而，很明显，为什么注意系统的安全区域内嵌很重要：一些页面的内容被原深感摄像头系统的空间遮挡了，而底部的导航栏非常难以使用。")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/demos/safe-area-insets/2-viewport-fit.html"}},[a("img",{attrs:{src:"https://webkit.org/wp-content/uploads/viewport-fit-cover.png",alt:"viewport-fit=cover"}})])],1),t._v(" "),a("p",[t._v("用 "),a("code",[t._v("viewport-fit=cover")]),t._v(" 适配全面屏.")]),t._v(" "),a("h2",{attrs:{id:"注意安全区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意安全区域"}},[t._v("#")]),t._v(" 注意安全区域")]),t._v(" "),a("p",[t._v("为了在采用 "),a("code",[t._v("viewport-fit=cover")]),t._v(" 之后页面还可用，下一步要做的是选择性地给包含重要内容的元素加上 padding，以确保元素不会被屏幕的形状所遮挡。生成的页面会充分利用 iPhone X 上增加的屏幕空间，同时动态调整避免四个角落、原深感摄像头系统的空间靠近主屏幕。")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/demos/safe-area-insets/safe-areas.html"}},[a("img",{attrs:{src:"https://webkit.org/wp-content/uploads/safe-areas.png",alt:"Safe and Unsafe Areas"}})])],1),t._v(" "),a("p",[t._v("iPhone X 横屏时的安全区和非安全区（带默认内嵌数值）")]),t._v(" "),a("p",[t._v("为了实现这一点，iOS 11 中的 WebKit 新增了一个 "),a("a",{attrs:{href:"https://github.com/w3c/csswg-drafts/pull/1817",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS 函数"),a("OutboundLink")],1),t._v("，"),a("code",[t._v("constant()")]),t._v("，以及一组 "),a("a",{attrs:{href:"https://github.com/w3c/csswg-drafts/pull/1819",target:"_blank",rel:"noopener noreferrer"}},[t._v("四个预定义的常量"),a("OutboundLink")],1),t._v("： "),a("code",[t._v("safe-area-inset-left")]),t._v(", "),a("code",[t._v("safe-area-inset-right")]),t._v(", "),a("code",[t._v("safe-area-inset-top")]),t._v(" 和 "),a("code",[t._v("safe-area-inset-bottom")]),t._v("。当合并使用时，允许样式使用每个方向的安全区域的大小。")]),t._v(" "),a("p",[t._v("CSS 工作组 "),a("a",{attrs:{href:"https://github.com/w3c/csswg-drafts/issues/1693#issuecomment-330909067",target:"_blank",rel:"noopener noreferrer"}},[t._v("最近决定添加这个特性"),a("OutboundLink")],1),t._v("，但是使用了不同的名称，请记住这一点。")]),t._v(" "),a("p",[a("code",[t._v("constant()")]),t._v(" 功能类似于 "),a("code",[t._v("var()")]),t._v("，比如下面的示例，在 "),a("code",[t._v("padding")]),t._v(" 属性使用：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".post {\n    padding: 12px;\n    padding-left: constant(safe-area-inset-left);\n    padding-right: constant(safe-area-inset-right);\n}\n")])])]),a("p",[t._v("对于不支持 "),a("code",[t._v("constant()")]),t._v(" 的浏览器，包含 "),a("code",[t._v("constant()")]),t._v(" 的样式将被忽略。因此，重要的是要对使用 "),a("code",[t._v("constant()")]),t._v(" 的样式另外使用替代样式。")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/demos/safe-area-insets/3-safe-area-constants.html"}},[a("img",{attrs:{src:"https://webkit.org/wp-content/uploads/safe-area-constants.png",alt:"Safe area constants"}})])],1),t._v(" "),a("p",[t._v("注意安全区内嵌，使重要内容可见。")]),t._v(" "),a("h2",{attrs:{id:"使用-min-和-max-将其全部组合在一起"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-min-和-max-将其全部组合在一起"}},[t._v("#")]),t._v(" 使用 min() 和 max() 将其全部组合在一起")]),t._v(" "),a("p",[t._v("本节介绍目前 iOS 11 还"),a("strong",[t._v("没有")]),t._v("实现的特性。")]),t._v(" "),a("p",[t._v("如果在网站设计中采用 constant() 来设置安全区域，你可能会注意到，在设置安全区域时，很难指定最小的 padding。在上面的页面中，我们把 12 px 的左填充替换成 "),a("code",[t._v("constant(safe-area-inset-left)")]),t._v("，当回到竖屏时，左侧的安全区域变成了 0 px，文本立即紧靠屏幕边缘。")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/demos/safe-area-insets/3-safe-area-constants.html"}},[a("img",{attrs:{src:"https://webkit.org/wp-content/uploads/no-margins.png",alt:"No margins"}})])],1),t._v(" "),a("p",[t._v("安全区域内嵌不能替代边距。")]),t._v(" "),a("p",[t._v("要解决这个问题，我们需要指定 padding 应该是默认的 padding 或安全区域中较大的那个。这可以用 "),a("a",{attrs:{href:"https://drafts.csswg.org/css-values/#calc-notation",target:"_blank",rel:"noopener noreferrer"}},[t._v("全新的 CSS 函数 "),a("code",[t._v("min()")]),t._v(" 和 "),a("code",[t._v("max()")]),a("OutboundLink")],1),t._v(" 来实现，这将在未来的 Safari 预览版本中提供相应的支持。两个函数都采用任意数量的参数，并返回最小值或最大值。它们可以在 "),a("code",[t._v("calc()")]),t._v(" 中使用，或者嵌套在一起，这两个函数都允许像 "),a("code",[t._v("calc()")]),t._v(" 一样的数学计算。")]),t._v(" "),a("p",[t._v("比如像下面这样的示例，可以这样使用 "),a("code",[t._v("max()")]),t._v(" ：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("@supports(padding: max(0px)) {\n    .post {\n        padding-left: max(12px, constant(safe-area-inset-left));\n        padding-right: max(12px, constant(safe-area-inset-right));\n    }\n}\n")])])]),a("p",[t._v("使用 @supports 来检测 min 和 max 很重要，因为并不是任何浏览器都支持，根据 CSS 的 "),a("a",{attrs:{href:"https://drafts.csswg.org/css-variables/#invalid-variables",target:"_blank",rel:"noopener noreferrer"}},[t._v("无效变量处理"),a("OutboundLink")],1),t._v("，"),a("strong",[t._v("不要")]),t._v("在 @supports 查询中指定变量。")]),t._v(" "),a("p",[t._v("在示例页面中，竖屏时 "),a("code",[t._v("constant(safe-area-inset-left)")]),t._v(" 解析为 0 px，因此 "),a("code",[t._v("max()")]),t._v(" 解析为 12 px。横屏时，由于感应器空间的存在，设置 "),a("code",[t._v("constant(safe-area-inset-left)")]),t._v(" 的值会变得更大，而 "),a("code",[t._v("max()")]),t._v(" 这个函数将会解析这个大小，以确保重要内容始终可见。")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/demos/safe-area-insets/4-min-max.html"}},[a("img",{attrs:{src:"https://webkit.org/wp-content/uploads/max-safe-areas-insets.png",alt:"max() with safe area insets"}})])],1),t._v(" "),a("p",[t._v("max() 将安全区内嵌与传统边距结合")]),t._v(" "),a("p",[t._v("有经验的 Web 开发人员以前可能遇到过 CSS 锁机制，通常用于将 CSS 属性设置在特定范围的值中。一起使用 "),a("code",[t._v("min()")]),t._v(" 和 "),a("code",[t._v("max()")]),t._v(" 会让事情变得更加容易，并且将有助于在未来实现有效的响应式设计。")]),t._v(" "),a("h2",{attrs:{id:"反馈和问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反馈和问题"}},[t._v("#")]),t._v(" 反馈和问题")]),t._v(" "),a("p",[t._v("现在你可以在 "),a("a",{attrs:{href:"https://developer.apple.com/xcode/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Xcode 9"),a("OutboundLink")],1),t._v(" 中 iPhone X 模拟器的 Safari 开始采用 viewport-fit 和安全区内嵌。很乐意听到所有特性被采纳，请随时将反馈和问题发送到 "),a("a",{attrs:{href:"mailto:web-evangelist@apple.com"}},[t._v("web-evangelist@apple.com")]),t._v(" 或者在 Twitter 上 "),a("a",{attrs:{href:"https://twitter.com/webkit",target:"_blank",rel:"noopener noreferrer"}},[t._v("@webkit"),a("OutboundLink")],1),t._v("，并将 bug 都提交到 "),a("a",{attrs:{href:"https://bugs.webkit.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebKit 的 bug 跟踪器"),a("OutboundLink")],1),t._v("。")])])}),[],!1,null,null,null);e.default=s.exports}}]);